# Config file for golangci-lint

# options for analysis running
run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  deadline: 5m

  # include test files or not, default is true
  tests: true

  # Allow opting out of linting with "// +build !lint" build tag.
  build-tags:
    - lint

  # Which files to skip: they will be analyzed, but issues from them
  # won't be reported. Default value is empty list, but there is usually
  # no need to include all autogenerated files.
  skip-files:

# Run "golangci-lint linters" for a list of available linters.  Don't enable
# any linters here, or they can't be disabled on the commandline.
linters:
  disable-all: true
  fast: false

# all available settings of specific linters
linters-settings:
  depguard:
    list-type: blacklist
    include-go-root: true
    packages:
      # don't use work stuff by accident
      - go.zr.org
      # Use github.com/gsmcwhirter/go-util/v3/errors instead
      - errors
      - github.com/pkg/errors
      # Use github.com/spf13/pflag instead
      - flag
      # Use github.com/gsmcwhirter/go-util/v3/logging instead
      - log
      - github.com/go-kit/kit/log
      - github.com/go-kit/kit/log/level
      # Use github.com/mailru/easyjson instead
      - encoding/json
      # Each use of unsafe must be reviewed
      - unsafe
  gocritic:
    # all checks list: https://github.com/go-critic/checkers
    # Enable all checks by enabling all tags, then disable a few.
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      # Don't be aggressive with comments.
      - commentedOutCode
      # Catches legit uses of case checking.
      - equalFold
      # Many defers can be skipped when exiting. Could fix this with a log.Fatal replacement.
      - exitAfterDefer
      # Ignoring the performance implications of this one for now.
      - hugeParam
      # Disagree with the style recommendations for these three.
      - ifElseChain
      - octalLiteral
      - unnamedResult
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true
  goimports:
    # put imports beginning with prefix after 3rd-party packages;
    # it's a comma-separated list of prefixes
    local-prefixes: github.com/gsmcwhirter/discord-bot-lib
  golint:
    # Show all issues, not just those with a high confidence
    min-confidence: 0.0
  govet:
    # report about shadowed variables
    check-shadowing: true
  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
    max-func-lines: 6

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle, default is "colored-line-number"
  format: line-number

  # print lines of code with issue, default is true
  print-issued-lines: false

issues:
  # List of regexps of issue texts to exclude, empty list by default.
  # But independently from this option we use default exclude patterns,
  # it can be disabled by `exclude-use-default: false`. To list all
  # excluded by default patterns execute `golangci-lint run --help`
  exclude:
    # errcheck: Ignoring errors on these functions is often okay
    - Error return value of .(.*\.(Close|Log)|os.Setenv|os.Remove(All)?). is not checked

    # golint: We don't require comments, only that they be properly formatted
    - comment on exported type
    - should have( a package)? comment

    # govet: Allow the most common form of shadowing
    - declaration of .err. shadows declaration

    # govet: Allow an unused noCopy struct field to disallow copying
    - .noCopy. is unused

    # gosec: Let errcheck complain about this instead
    - G104. Errors unhandled

    # gosec: All URLs are variable in our code; this isn't useful
    - G107. Potential HTTP request made with variable url

    # gosec: Complaining about every exec.Command() is annoying; we'll audit them
    - G204. Subprocess launching should be audited
    - G204. Subprocess launched with variable

    # gosec: Too many false positives for legit uses of files and directories
    - G301. Expect directory permissions to be 0750 or less
    - G302. Expect file permissions to be 0600 or less

    # gosec: False positive is triggered by 'src, err := ioutil.ReadFile(filename)'
    - G304. Potential file inclusion via variable

    # gosec: We're allowing SHA1 for now, but MD5, DES, and RC4 need to be audited
    - G401. Use of weak cryptographic primitive
    - G505. Blacklisted import .crypto/sha1.. weak cryptographic primitive

  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0
